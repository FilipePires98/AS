[2020-04-04 15:08:27,225] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:08:27,270] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:11:25,364] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-04 15:11:29,867] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:11:29,988] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-04 15:11:29,989] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-04 15:11:30,007] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-04 15:11:30,045] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-04 15:11:30,058] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-04 15:11:30,124] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:11:30,156] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:11:30,205] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 54, 1 -> 56, 2 -> 55) (kafka.controller.KafkaController)
[2020-04-04 15:11:30,211] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:11:30,227] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:11:30,252] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-04 15:11:30,288] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:11:30,341] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:11:30,368] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:11:30,402] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,409] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-04 15:11:30,410] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:11:30,411] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:11:30,417] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-04 15:11:30,415] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,421] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,424] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,425] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,426] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-04 15:11:30,428] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-04 15:11:30,429] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-04 15:11:30,495] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:11:30,504] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:11:30,530] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:11:30,539] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:11:30,540] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:11:30,541] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,542] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:11:30,545] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,546] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:11:30,556] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:11:30,557] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-04 15:11:30,577] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,578] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,579] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,582] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-04 15:11:30,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-04 15:11:30,627] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-04 15:11:31,452] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:11:31,459] INFO [Controller id=0] New partition creation callback for BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:11:31,693] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:11:31,694] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-04 15:11:35,630] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-04 15:11:35,631] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-04 15:11:35,641] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2), __consumer_offsets-4 -> Vector(2), __consumer_offsets-7 -> Vector(2), __consumer_offsets-46 -> Vector(2), __consumer_offsets-25 -> Vector(2), __consumer_offsets-49 -> Vector(2), __consumer_offsets-16 -> Vector(2), __consumer_offsets-28 -> Vector(2), __consumer_offsets-31 -> Vector(2), __consumer_offsets-37 -> Vector(2), __consumer_offsets-19 -> Vector(2), __consumer_offsets-13 -> Vector(2), __consumer_offsets-43 -> Vector(2), __consumer_offsets-1 -> Vector(2), __consumer_offsets-34 -> Vector(2), __consumer_offsets-10 -> Vector(2), __consumer_offsets-40 -> Vector(2)), 1 -> Map(__consumer_offsets-30 -> Vector(1), __consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-36 -> Vector(1), __consumer_offsets-42 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-18 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-24 -> Vector(1), __consumer_offsets-48 -> Vector(1), __consumer_offsets-6 -> Vector(1), __consumer_offsets-0 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-12 -> Vector(1), __consumer_offsets-45 -> Vector(1)), 0 -> Map(__consumer_offsets-8 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-14 -> Vector(0), BatchTopic-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-32 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-04 15:11:35,644] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-04 15:11:35,646] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:11:35,646] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-04 15:11:35,646] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:11:35,646] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-04 15:11:35,646] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:11:36,241] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:11:36,241] INFO [Controller id=0] New partition creation callback for ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:11:38,956] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:11:38,956] INFO [Controller id=0] New partition creation callback for AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:15:23,794] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-04 15:15:25,892] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:15:25,902] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:15:25,928] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-04 15:15:25,928] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-04-04 15:15:25,932] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-04 15:15:25,938] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-04 15:15:25,941] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-04-04 15:15:25,960] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:15:25,971] INFO [Controller id=1] Initialized broker epochs cache: Map(0 -> 54, 1 -> 55) (kafka.controller.KafkaController)
[2020-04-04 15:15:25,976] DEBUG [Controller id=1] Register BrokerModifications handler for Set(0, 1) (kafka.controller.KafkaController)
[2020-04-04 15:15:25,983] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:15:25,996] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:15:26,012] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,016] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,016] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2020-04-04 15:15:26,017] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:15:26,017] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:15:26,017] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-04 15:15:26,026] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,028] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,038] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-04 15:15:26,039] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-04 15:15:26,040] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-04 15:15:26,052] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:15:26,053] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:15:26,058] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:15:26,058] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:15:26,059] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:15:26,060] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:15:26,060] INFO [RequestSendThread controllerId=1] Controller 1 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,060] INFO [RequestSendThread controllerId=1] Controller 1 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,063] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:15:26,067] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:15:26,068] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-04 15:15:26,075] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,075] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,076] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,076] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-04 15:15:26,078] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-04 15:15:26,081] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:15:26,091] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-04 15:15:26,114] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-04 15:15:26,114] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:15:26,160] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-04 15:15:26,175] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-04 15:15:26,178] INFO [Controller id=1] Updated broker epochs cache: Map(0 -> 54, 1 -> 55, 2 -> 58) (kafka.controller.KafkaController)
[2020-04-04 15:15:26,178] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,184] INFO [RequestSendThread controllerId=1] Controller 1 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:15:26,677] INFO [Controller id=1] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-0 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:15:26,677] INFO [Controller id=1] New partition creation callback for BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:15:28,664] INFO [Controller id=1] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:15:28,664] INFO [Controller id=1] New partition creation callback for ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:15:30,655] INFO [Controller id=1] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:15:30,655] INFO [Controller id=1] New partition creation callback for AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-04 15:15:31,094] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-04 15:15:31,095] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-04 15:15:31,099] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(BatchTopic-0 -> Vector(2, 0, 1)), 1 -> Map(AlarmTopic-0 -> Vector(1, 2, 0)), 0 -> Map(ReportTopic-0 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-04 15:15:31,103] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-04 15:15:31,106] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:15:31,107] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-04 15:15:31,107] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:15:31,107] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-04 15:15:31,107] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:15:33,741] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-04 15:15:33,742] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-04 15:17:37,697] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-04 15:18:03,304] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-04 15:18:05,354] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:18:05,379] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-04-04 15:18:05,380] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-04 15:18:05,384] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-04 15:18:05,392] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-04 15:18:05,397] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-04 15:18:05,432] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 275) (kafka.controller.KafkaController)
[2020-04-04 15:18:05,457] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-04-04 15:18:05,553] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:18:05,591] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:18:05,592] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-04-04 15:18:05,593] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:18:05,595] INFO [Controller id=2] Current list of topics in the cluster: Set(ReportTopic, __consumer_offsets, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-04 15:18:05,595] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-04 15:18:05,648] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-04 15:18:05,649] INFO [Controller id=2] List of topics ineligible for deletion: ReportTopic,__consumer_offsets,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-04 15:18:05,650] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-04 15:18:05,652] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, __consumer_offsets, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-04 15:18:05,653] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-04 15:18:05,675] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:18:05,691] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:18:05,705] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:18:05,751] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:18:05,829] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:18:05,966] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:18:06,015] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:18:06,087] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:18:06,578] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=BatchTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:18:06,580] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:18:06,598] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:18:06,890] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, ReportTopic-0 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, BatchTopic-0 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, AlarmTopic-0 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:18:06,894] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-04-04 15:18:06,914] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:18:06,924] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:18:06,933] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:18:06,934] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-04 15:18:06,938] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-04 15:18:06,956] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-04 15:18:07,028] INFO [Controller id=2] Newly added brokers: 0,1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-04 15:18:07,030] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:18:07,049] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:18:07,057] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:18:07,077] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:18:07,078] INFO [Controller id=2] New broker startup callback for 0,1 (kafka.controller.KafkaController)
[2020-04-04 15:18:07,113] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:18:07,115] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:18:07,375] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(0, 1) (kafka.controller.KafkaController)
[2020-04-04 15:18:07,382] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 275, 0 -> 279, 1 -> 278) (kafka.controller.KafkaController)
[2020-04-04 15:18:11,959] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-04 15:18:11,959] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-04 15:18:11,968] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-9 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), BatchTopic-0 -> Vector(2, 0, 1), __consumer_offsets-0 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-45 -> Vector(2)), 1 -> Map(AlarmTopic-0 -> Vector(1, 2, 0), __consumer_offsets-8 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-2 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-32 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-37 -> Vector(0), ReportTopic-0 -> Vector(0, 2, 1), __consumer_offsets-19 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-04 15:18:11,970] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-04 15:18:11,972] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:18:11,972] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map(AlarmTopic-0 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2020-04-04 15:18:11,972] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-04-04 15:18:11,972] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(ReportTopic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-04-04 15:18:11,972] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.05555555555555555 (kafka.controller.KafkaController)
[2020-04-04 15:18:15,187] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(2, 0, 1) for TopicPartitions: ArrayBuffer(BatchTopic-0, ReportTopic-0, AlarmTopic-0) (kafka.controller.KafkaController)
[2020-04-04 15:23:10,354] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-04 15:23:12,322] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:23:12,342] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-04-04 15:23:12,343] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-04 15:23:12,349] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-04 15:23:12,355] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-04 15:23:12,357] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-04 15:23:12,374] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 410) (kafka.controller.KafkaController)
[2020-04-04 15:23:12,388] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-04 15:23:12,445] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:23:12,459] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-04 15:23:12,460] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-04 15:23:12,460] INFO [Controller id=0] Current list of topics in the cluster: Set(ReportTopic, __consumer_offsets, BatchTopic, AlarmTopic) (kafka.controller.KafkaController)
[2020-04-04 15:23:12,461] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-04 15:23:12,461] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:23:12,481] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-04 15:23:12,481] INFO [Controller id=0] List of topics ineligible for deletion: ReportTopic,__consumer_offsets,BatchTopic,AlarmTopic (kafka.controller.KafkaController)
[2020-04-04 15:23:12,482] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-04 15:23:12,483] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(ReportTopic, __consumer_offsets, BatchTopic, AlarmTopic) (kafka.controller.TopicDeletionManager)
[2020-04-04 15:23:12,483] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-04 15:23:12,498] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:23:12,508] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:23:12,511] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:23:12,642] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:23:12,707] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:23:12,732] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:23:12,778] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-04 15:23:12,814] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-04 15:23:12,867] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=BatchTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=AlarmTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=ReportTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=BatchTopic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=AlarmTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=BatchTopic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=ReportTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-04-04 15:23:12,868] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:23:12,903] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:23:13,009] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, ReportTopic-0 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, BatchTopic-0 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, AlarmTopic-0 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-04-04 15:23:13,010] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-04-04 15:23:13,015] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:23:13,015] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-04 15:23:13,015] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-04 15:23:13,016] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-04 15:23:13,017] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-04 15:23:13,029] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-04 15:23:13,077] INFO [Controller id=0] Newly added brokers: 1,2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-04 15:23:13,079] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:23:13,087] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-04 15:23:13,087] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:23:13,102] INFO [Controller id=0] New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2020-04-04 15:23:13,105] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-04 15:23:13,112] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:23:13,126] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-04 15:23:13,276] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1, 2) (kafka.controller.KafkaController)
[2020-04-04 15:23:13,289] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 410, 1 -> 414, 2 -> 413) (kafka.controller.KafkaController)
[2020-04-04 15:23:18,031] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-04 15:23:18,032] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-04 15:23:18,055] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-9 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), BatchTopic-0 -> Vector(2, 0, 1), __consumer_offsets-0 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-45 -> Vector(2)), 1 -> Map(AlarmTopic-0 -> Vector(1, 2, 0), __consumer_offsets-8 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-2 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-32 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-37 -> Vector(0), ReportTopic-0 -> Vector(0, 2, 1), __consumer_offsets-19 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-04 15:23:18,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(BatchTopic-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2020-04-04 15:23:18,068] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2020-04-04 15:23:18,068] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map(AlarmTopic-0 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2020-04-04 15:23:18,068] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2020-04-04 15:23:18,068] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-04 15:23:18,068] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-04 15:23:22,155] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(BatchTopic-0, ReportTopic-0, AlarmTopic-0) (kafka.controller.KafkaController)
