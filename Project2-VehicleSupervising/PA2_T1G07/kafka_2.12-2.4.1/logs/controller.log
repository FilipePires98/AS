[2020-04-15 23:08:35,608] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:08:35,661] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:22:36,067] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-15 23:22:42,787] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:22:42,897] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:22:42,933] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-15 23:22:42,933] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-15 23:22:42,948] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-15 23:22:42,967] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-15 23:22:42,980] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:22:42,982] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-15 23:22:42,986] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:22:43,070] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:22:43,176] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 54, 1 -> 55, 2 -> 56) (kafka.controller.KafkaController)
[2020-04-15 23:22:43,187] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:22:43,247] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:22:43,328] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:22:43,353] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:22:43,376] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,376] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,389] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:22:43,390] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:22:43,391] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:22:43,392] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-15 23:22:43,386] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,398] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,399] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,400] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-15 23:22:43,401] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-15 23:22:43,403] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-15 23:22:43,463] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:22:43,466] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:22:43,486] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:22:43,488] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:22:43,489] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:22:43,492] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:22:43,506] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,529] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,530] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:22:43,568] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:22:43,570] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-15 23:22:43,604] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,606] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,607] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,608] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-15 23:22:43,616] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-15 23:22:43,716] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-15 23:22:44,876] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:22:44,877] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:22:48,718] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-15 23:22:48,719] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-15 23:22:48,721] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(BatchTopic-1 -> Vector(2, 1, 0)), 1 -> Map(BatchTopic-2 -> Vector(1, 0, 2)), 0 -> Map(BatchTopic-0 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-15 23:22:48,723] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-15 23:22:48,724] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:22:48,724] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-15 23:22:48,724] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:22:48,724] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-15 23:22:48,724] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:22:49,119] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:22:49,119] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:22:51,532] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:22:51,533] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:22:56,815] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:22:56,816] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-15 23:30:54,206] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-15 23:30:58,453] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:30:58,492] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:30:58,566] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-15 23:30:58,567] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-04-15 23:30:58,601] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-15 23:30:58,617] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-15 23:30:58,628] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-04-15 23:30:58,619] DEBUG [Controller id=0] Broker 2 was elected as controller instead of broker 0 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-04-15 23:30:58,757] INFO [Controller id=2] Initialized broker epochs cache: Map(0 -> 58, 1 -> 63, 2 -> 59) (kafka.controller.KafkaController)
[2020-04-15 23:30:58,778] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:30:58,799] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:30:58,857] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:30:58,872] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:30:58,916] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:30:58,917] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:30:58,918] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:30:58,918] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:30:58,920] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-15 23:30:58,924] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:30:58,924] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:30:58,940] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:30:58,943] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-15 23:30:58,946] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:30:58,947] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-15 23:30:58,949] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-15 23:30:58,953] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-15 23:30:58,982] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:30:59,034] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:30:59,037] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:30:59,058] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:30:59,076] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:30:59,076] INFO [RequestSendThread controllerId=2] Controller 2 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:30:59,088] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:30:59,090] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:30:59,092] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:30:59,100] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:30:59,113] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:30:59,121] INFO [Controller id=2] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-15 23:30:59,142] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:30:59,144] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:30:59,145] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:30:59,149] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-15 23:30:59,153] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-15 23:30:59,194] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-15 23:31:00,205] INFO [Controller id=2] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:31:00,206] INFO [Controller id=2] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:31:04,200] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-15 23:31:04,201] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-15 23:31:04,205] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(BatchTopic-0 -> Vector(2, 1, 0)), 1 -> Map(BatchTopic-1 -> Vector(1, 0, 2)), 0 -> Map(BatchTopic-2 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-15 23:31:04,207] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-15 23:31:04,210] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:31:04,211] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-15 23:31:04,211] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:31:04,211] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-15 23:31:04,211] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:31:04,730] INFO [Controller id=2] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:31:04,731] INFO [Controller id=2] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:31:08,108] INFO [Controller id=2] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:31:08,108] INFO [Controller id=2] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:31:13,865] INFO [Controller id=2] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:31:13,866] INFO [Controller id=2] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-15 23:34:16,973] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-15 23:34:20,857] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:34:20,969] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-15 23:34:20,970] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-15 23:34:20,986] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-15 23:34:21,016] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-15 23:34:21,050] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-15 23:34:21,219] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 58, 1 -> 59, 2 -> 60) (kafka.controller.KafkaController)
[2020-04-15 23:34:21,236] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:34:21,286] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:34:21,309] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:34:21,346] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:34:21,355] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:34:21,365] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:34:21,394] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:34:21,431] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:34:21,432] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:34:21,433] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:34:21,435] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-15 23:34:21,438] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,439] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,451] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:34:21,451] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,453] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,454] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-15 23:34:21,456] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-15 23:34:21,457] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-15 23:34:21,460] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,523] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:34:21,551] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:34:21,575] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,575] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:34:21,576] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,576] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:34:21,579] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:34:21,598] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:34:21,608] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:34:21,659] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:34:21,660] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-15 23:34:21,688] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,690] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,692] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,699] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-15 23:34:21,709] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-15 23:34:21,761] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-15 23:34:23,162] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:34:23,163] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:34:26,765] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-15 23:34:26,765] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-15 23:34:26,770] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(BatchTopic-0 -> Vector(2, 1, 0)), 1 -> Map(BatchTopic-1 -> Vector(1, 0, 2)), 0 -> Map(BatchTopic-2 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-15 23:34:26,772] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-15 23:34:26,774] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:34:26,774] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-15 23:34:26,774] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:34:26,774] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-15 23:34:26,774] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:34:27,510] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:34:27,510] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:34:30,055] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:34:30,055] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:34:35,554] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:34:35,559] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-15 23:42:17,933] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-15 23:42:24,566] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:42:24,704] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-15 23:42:24,705] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-15 23:42:24,713] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-15 23:42:24,720] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-15 23:42:24,731] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-15 23:42:24,757] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:42:24,809] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:42:24,826] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:42:24,836] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 62, 1 -> 64, 2 -> 63) (kafka.controller.KafkaController)
[2020-04-15 23:42:24,847] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:42:24,872] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:42:24,896] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:42:24,914] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:42:24,949] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:42:25,024] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:42:25,025] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:42:25,025] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,026] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:42:25,027] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-15 23:42:25,037] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,038] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,039] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-15 23:42:25,041] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-15 23:42:25,042] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-15 23:42:25,027] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,069] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,133] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:42:25,143] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:42:25,158] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,168] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,174] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:42:25,200] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:42:25,203] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:42:25,204] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:42:25,206] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:42:25,240] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:42:25,241] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-15 23:42:25,273] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,276] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,278] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,314] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-15 23:42:25,317] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-15 23:42:25,450] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-15 23:42:26,457] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:42:26,458] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:42:30,366] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:42:30,366] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:42:30,455] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-15 23:42:30,456] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-15 23:42:30,469] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(BatchTopic-0 -> Vector(2, 1, 0), ReportTopic-1 -> Vector(2, 0, 1)), 1 -> Map(ReportTopic-2 -> Vector(1, 2, 0), BatchTopic-1 -> Vector(1, 0, 2)), 0 -> Map(ReportTopic-0 -> Vector(0, 1, 2), BatchTopic-2 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-15 23:42:30,471] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-15 23:42:30,473] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:42:30,473] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-15 23:42:30,473] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:42:30,473] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-15 23:42:30,473] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:42:32,703] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:42:32,703] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:42:37,959] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:42:37,960] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-15 23:57:44,466] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-15 23:57:51,976] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:57:52,117] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-15 23:57:52,118] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-15 23:57:52,157] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-15 23:57:52,170] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-15 23:57:52,178] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-15 23:57:52,212] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:57:52,221] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-15 23:57:52,287] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:57:52,312] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-15 23:57:52,430] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 54, 1 -> 56, 2 -> 55) (kafka.controller.KafkaController)
[2020-04-15 23:57:52,464] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:57:52,490] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:57:52,573] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:57:52,617] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-15 23:57:52,658] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,675] INFO [Controller id=0] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2020-04-15 23:57:52,676] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:57:52,678] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-15 23:57:52,679] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-15 23:57:52,668] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,681] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,687] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,688] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,689] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-15 23:57:52,691] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-15 23:57:52,692] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-15 23:57:52,741] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:57:52,743] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:57:52,758] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:57:52,760] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-15 23:57:52,762] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:57:52,789] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:57:52,807] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,823] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-15 23:57:52,831] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,832] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-15 23:57:52,832] INFO [RequestSendThread controllerId=0] Controller 0 connected to pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-15 23:57:52,862] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,864] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,865] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,867] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-15 23:57:52,878] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-15 23:57:52,982] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-15 23:57:54,061] INFO [Controller id=0] New topics: [Set(BatchTopic)], deleted topics: [Set()], new partition replica assignment [Map(BatchTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), BatchTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), BatchTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:57:54,061] INFO [Controller id=0] New partition creation callback for BatchTopic-2,BatchTopic-1,BatchTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:57:57,990] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-15 23:57:57,991] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-15 23:57:57,994] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(BatchTopic-0 -> Vector(2, 1, 0)), 1 -> Map(BatchTopic-1 -> Vector(1, 0, 2)), 0 -> Map(BatchTopic-2 -> Vector(0, 2, 1))) (kafka.controller.KafkaController)
[2020-04-15 23:57:57,998] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-15 23:57:58,000] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:57:58,000] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-15 23:57:58,000] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:57:58,000] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-15 23:57:58,001] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-15 23:57:59,243] INFO [Controller id=0] New topics: [Set(ReportTopic)], deleted topics: [Set()], new partition replica assignment [Map(ReportTopic-2 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), ReportTopic-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), ReportTopic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:57:59,243] INFO [Controller id=0] New partition creation callback for ReportTopic-2,ReportTopic-1,ReportTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:58:02,265] INFO [Controller id=0] New topics: [Set(AlarmTopic)], deleted topics: [Set()], new partition replica assignment [Map(AlarmTopic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), AlarmTopic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), AlarmTopic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:58:02,265] INFO [Controller id=0] New partition creation callback for AlarmTopic-2,AlarmTopic-1,AlarmTopic-0 (kafka.controller.KafkaController)
[2020-04-15 23:58:07,974] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-15 23:58:07,976] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
