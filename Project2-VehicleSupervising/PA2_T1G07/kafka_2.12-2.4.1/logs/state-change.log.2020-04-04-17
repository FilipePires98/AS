[2020-04-04 18:26:53,621] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,622] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-04 18:26:53,645] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,646] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,646] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,646] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,647] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,647] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,647] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,647] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,648] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,648] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,648] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,649] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,649] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,649] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,649] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,650] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:53,650] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:510)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:478)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1453)
	at kafka.controller.KafkaController.process(KafkaController.scala:1878)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition AlarmTopic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,613] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition ReportTopic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,614] TRACE [Controller id=1 epoch=2] Changed state of replica 0 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-04-04 18:26:54,615] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition ReportTopic-0 (state.change.logger)
[2020-04-04 18:26:54,615] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition AlarmTopic-0 (state.change.logger)
[2020-04-04 18:26:54,616] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition ReportTopic-0 (state.change.logger)
[2020-04-04 18:26:54,616] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition AlarmTopic-0 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 0, 2], offlineReplicas=[0]) to brokers Set(1, 2) for partition ReportTopic-0 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 0], offlineReplicas=[0]) to brokers Set(1, 2) for partition AlarmTopic-0 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2020-04-04 18:26:54,617] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2020-04-04 18:26:54,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 7 from controller 1 epoch 2 (state.change.logger)
[2020-04-04 18:26:54,626] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 7 from controller 1 epoch 2 (state.change.logger)
[2020-04-04 18:26:54,626] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 2 starting the become-leader transition for partition ReportTopic-0 (state.change.logger)
[2020-04-04 18:26:54,786] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 7 from controller 1 epoch 2 for partition ReportTopic-0 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2020-04-04 18:26:54,786] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 2 for the become-leader transition for partition ReportTopic-0 (state.change.logger)
[2020-04-04 18:26:54,786] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 2 starting the become-follower transition for partition AlarmTopic-0 with leader 2 (state.change.logger)
[2020-04-04 18:26:54,787] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 7 for partition AlarmTopic-0 with leader 2 (state.change.logger)
[2020-04-04 18:26:54,787] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition AlarmTopic-0 as part of become-follower request with correlation id 7 from controller 1 epoch 2 with leader 2 (state.change.logger)
[2020-04-04 18:26:54,787] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 2 with correlation id 7 for partition AlarmTopic-0 with leader BrokerEndPoint(id=2, host=fp:9094) (state.change.logger)
[2020-04-04 18:26:54,787] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 2 for the become-follower transition for partition AlarmTopic-0 with leader 2 (state.change.logger)
[2020-04-04 18:26:54,788] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partition_errors=[{topic_name=ReportTopic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=AlarmTopic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 7 sent to broker fp:9093 (id: 1 rack: null) (state.change.logger)
[2020-04-04 18:26:54,789] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partition_errors=[{topic_name=ReportTopic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=AlarmTopic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 7 sent to broker fp:9094 (id: 2 rack: null) (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 0, 2], offlineReplicas=[0]) for partition ReportTopic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,790] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 0], offlineReplicas=[0]) for partition AlarmTopic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2020-04-04 18:26:54,791] TRACE [Controller id=1 epoch=2] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker fp:9093 (id: 1 rack: null) (state.change.logger)
[2020-04-04 18:26:54,791] TRACE [Controller id=1 epoch=2] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker fp:9094 (id: 2 rack: null) (state.change.logger)
