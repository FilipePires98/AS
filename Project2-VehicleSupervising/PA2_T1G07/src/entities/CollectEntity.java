package entities;

import java.util.Properties;
import javax.swing.*;

import org.apache.kafka.clients.producer.*;

/**
 * Class for the Collect Entity for the car supervising system.
 * 
 * @author Filipe Pires (85122) and Jo√£o Alegria (85048)
 */
public class CollectEntity extends JFrame {
    
    private static String[] topicName;

    /**
     * Creates new form CollectEntity
     */
    public CollectEntity(String[] topicName) {
        this.setTitle("Collect Entiry");
        this.topicName = topicName;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        topicsToIncludeLabel = new javax.swing.JLabel();
        batchTopicCheckbox = new javax.swing.JCheckBox();
        reportTopicCheckbox = new javax.swing.JCheckBox();
        alarmTopicCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setText("Collect Entity");

        topicsToIncludeLabel.setText("Topics to include:");

        batchTopicCheckbox.setSelected(true);
        batchTopicCheckbox.setText("BatchTopic");

        reportTopicCheckbox.setSelected(true);
        reportTopicCheckbox.setText("ReportTopic");

        alarmTopicCheckbox.setSelected(true);
        alarmTopicCheckbox.setText("AlarmTopic");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addComponent(topicsToIncludeLabel)
                    .addComponent(batchTopicCheckbox)
                    .addComponent(reportTopicCheckbox)
                    .addComponent(alarmTopicCheckbox))
                .addContainerGap(473, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addComponent(topicsToIncludeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(batchTopicCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportTopicCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alarmTopicCheckbox)
                .addContainerGap(216, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        if(args.length == 0){
            System.err.println("[Collect] Kafka Topics not given.");
            return;
        }
        
        System.out.println("[Collect] Running...");
      
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CollectEntity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CollectEntity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CollectEntity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CollectEntity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CollectEntity(args).setVisible(true);
            }
        });
        
        Properties props = new Properties();                                // create properties to access producer configs
        props.put("bootstrap.servers", "localhost:9092");                   // assign localhost id
        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");                    // define serializer for keys
        props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");                  // define serializer for values

        Producer<String,String> producer = new KafkaProducer<>(props);
        ProducerRecord<String,String> record = new ProducerRecord<>(CollectEntity.topicName[0],"k1","v1");
        producer.send(record);
        producer.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox alarmTopicCheckbox;
    private javax.swing.JCheckBox batchTopicCheckbox;
    private javax.swing.JCheckBox reportTopicCheckbox;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel topicsToIncludeLabel;
    // End of variables declaration//GEN-END:variables
}
